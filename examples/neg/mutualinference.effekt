interface Console { def log(): Unit }
interface Time { def now(): Unit }

def mymodule { c: Console } { t : Time } {

  def even { f : () => Unit } {
    c.log();
    box { () => (unbox odd { () => f() })() }
  }

  def odd { g : () => Unit } : () => Unit at {c, g} {
    // {f}[f !-> t] fails
    // t.now();
    // val x = box { () => even { () => t.now() } };
    box { () => (unbox even { () => g() })() }
  }

  return ()
}